<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>